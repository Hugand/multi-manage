{"version":3,"sources":["assets/imgs/auth_manager.jpg","assets/imgs/loading.svg","helpers/session/auth.js","actions.js","localStorage.js","components/Navbar.jsx","components/ModalBox.jsx","components/ProcessingComponent.jsx","components/ModalComponents/AddFieldModalData.jsx","helpers/inputValidation.js","components/ModalComponents/AddNewTableRow.jsx","components/TableDataComponents/CustomTable.jsx","models/tableModel.js","components/ModalComponents/AddFields.jsx","components/TableDataComponents/TablesManage.jsx","components/ModalComponents/CreateUserModal.jsx","components/TableDataComponents/UsersManage.jsx","App.jsx","Login.jsx","Register.jsx","actions/updateUserData.js","components/ModalComponents/UpdateCustomTableRowModal.jsx","components/DataContainerField.jsx","components/ViewRowComponents/ViewCustomTableRow.jsx","components/ModalComponents/UpdateFieldModalData.jsx","components/ModalComponents/DeleteTableModalData.jsx","components/ViewRowComponents/ViewTablesManageRow.jsx","components/ModalComponents/UpdateUserDataModal.jsx","components/ViewRowComponents/ViewUsersManageRow.jsx","ViewRow.jsx","reducers/index.js","reducers/tablesData.js","reducers/userData.js","LandingPage.jsx","index.js"],"names":["module","exports","ORG_TOKEN","setSessionCookie","cookieName","session","Cookies","expires","getSessionCookie","sessionCookie","undefined","deleteSessionCookies","isSessionCookieSet","updateTablesData","newData","type","updateUserData","deleteState","localStorage","removeItem","err","NavbarComponent","params","url","parser","document","createElement","href","vars","search","substring","split","i","length","pair","decodeURIComponent","getUrlParams","window","location","state","navbarData","tableId","reqData","orgIdToken","userTokenId","fetch","method","headers","body","JSON","stringify","then","resp","json","res","status","reload","props","updateUser","catch","updateTables","this","userData","id","onClick","name","jobRole","admin","className","tablesData","map","table","key","tableName","React","Component","Navbar","connect","dispatch","newUserData","newTableData","ModalBox","toggleModal","style","display","isShown","e","stopPropagation","dataFields","ProcessingComponent","borderRadius","radius","src","require","alt","width","height","AddFieldModalData","handleSelectFieldValueChange","setState","selectFieldValue","target","value","handleFieldNameChange","fieldName","handleFieldTypeChange","fieldType","handleCheckboxChange","displayTable","addSelectValue","selectData","removeSelectDataValue","removeIndex","splice","submitUpdate","console","log","modalFieldData","dataSubmited","processingRequest","orgId","tokenId","onSubmit","a","preventDefault","onChange","placeholder","checked","for","disabled","size","color","isChecked","validatePhoneField","phone","isValid","h","charAt","AddNewTableRow","handleInputChange","fieldController","includes","tableData","processingData","pP","prevState","_id","fields","field","select_data","selectValue","CustomTable","getTableRows","nPage","handleRowClick","index","showModal","nextPage","tablePage","nPages","data","prevPage","forEach","display_table","row","TableModel","AddFields","appendNewField","newField","displayInTable","cbChecked","selectValues","newFieldsData","pos","appendSelectValue","removeSelectValue","handleOnEnterPressed","item","handleFieldNameInputChange","handleRadioButtonsChange","handleSelectValueKeyDown","handleSelectFieldValueInputChange","handleTableNameInputChange","handleTableDispCheckbox","submitNewTable","tableModel","setName","setFields","reverse","join","onKeyDown","htmlFor","TablesManageComponent","TablesManage","CreateUserModal","submitUserCreationReq","password","confPassword","fullName","username","email","isAdmin","currState","float","UsersManageComponent","userId","usersData","user","UsersManage","App","AppComponent","Login","orgIdHandlerOnChange","orgPasswordHandlerOnChange","orgPassword","userEmailHandlerOnChange","userEmail","userPasswordHandlerOnChange","userPassword","authTypeHandler","goToPrevLoginStep","loginState","cred","isProcessing","name_id","orgLoginResp","userLoginResp","userIdToken","required","Register","validateFields","formData","isPasswordValid","orgConfPassword","userConfPassword","nameIdUnique","registerStep","isOrgIdValid","trim","isUsernameValid","formHandler","checkForNameIdUniqueness","nameId","unique","submitUserRegister","orgEmail","orgName","userFullName","userPhone","isUserIdValid","isUserPasswordValid","passwordEqual","class","UpdateCustomTableRowModal","updateFieldValue","parseInt","fieldValue","rowData","rowIndex","fieldData","filter","f","defaultValue","selectIndex","DataContainerField","label","ViewCustomTableRowComponent","updateModalContent","modalContent","push","fieldsData","section","sectionIndex","Array","from","ViewCustomTableRow","UpdateFieldModalData","tableFields","handleCheckbox","prevProps","DeleteTableModalData","handleAdminPasswordChange","adminPassword","goToAdminPassStep","step","handleTableDeleteRequest","adminPass","displayError","ViewTablesManageRowComponent","requestRowData","newState","modalTypeToShow","handleEditField","handleFieldDeleteRequest","fieldIndex","fieldToDeleteIndex","fontSize","ViewTablesManageRow","UpdateUserDataModal","handleFieldUpdate","ViewUsersManageRowComponent","ViewUsersManageRow","ViewRowComponent","ViewRow","combineReducers","action","LandingPage","store","createStore","rootReducer","serializedData","getItem","parse","loadState","subscribe","serializedState","setItem","saveState","getState","PrivateRoute","component","rest","render","to","ReactDOM","exact","path","getElementById"],"mappings":"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","file":"static/js/main.c3dcb7fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/auth_manager.3adb47a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.bd9822d3.svg\";","import * as Cookies from 'js-cookie'\n\n/*\nuserToken - user idToken\norgToken - org id\n*/\n\nexport const USER_TOKEN = \"userToken\"\nexport const ORG_TOKEN = \"orgToken\"\n\n\nexport const setSessionCookie = (cookieName, session) => {\n    Cookies.remove(cookieName)\n    Cookies.set(cookieName, session, {expires: 3600})\n}\n\nexport const getSessionCookie = (cookieName) => {\n    const sessionCookie = Cookies.get(cookieName)\n    if(sessionCookie === undefined)\n        return {}\n    else\n        return sessionCookie\n}\n\nexport const deleteSessionCookie = (cookieName) => {\n    Cookies.remove(cookieName)\n}\n\nexport const deleteSessionCookies = () => {\n    Cookies.remove(USER_TOKEN)\n    Cookies.remove(ORG_TOKEN)\n}\n\nexport const isSessionCookieSet = (cookieName) => {\n    const sessionCookie = Cookies.get(cookieName)\n    return !(sessionCookie === undefined)\n}","export const updateTablesData = newData => {\n    return {\n        type: \"UPDATE_TABLES\",\n        newData,\n    }\n}\n\nexport const updateUserData = newData => {\n    return {\n        type: \"UPDATE\",\n        newData,\n    }\n}","export const loadState = () => {\n    try{\n        const serializedData = localStorage.getItem('state')\n        if(serializedData === null)\n            return undefined\n        return JSON.parse(serializedData)\n    }catch(err){\n        return undefined\n    }\n}\n\nexport const saveState = state => {\n    try{\n        const serializedState = JSON.stringify(state)\n        localStorage.setItem('state', serializedState)\n    }catch(err){\n        // Ignore errors for now\n    }\n}\n\nexport const deleteState = () => {\n    try{\n        localStorage.removeItem('state')\n    }catch(err){\n\n    }\n}","import React from 'react'\nimport { deleteSessionCookies, getSessionCookie, ORG_TOKEN, USER_TOKEN } from '../helpers/session/auth.js'\nimport { FiLogOut } from \"react-icons/fi\";\nimport {connect} from 'react-redux'\nimport {updateUserData, updateTablesData} from '../actions.js'\nimport '../localStorage.js'\nimport { deleteState } from '../localStorage.js'\nimport '../css/NavBar.scss'\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\nclass NavbarComponent extends React.Component{\n    constructor(){\n        super()\n        const params = getUrlParams(window.location.href)\n        this.state = {\n            navbarData: [],\n            tableId: params.tableId\n        }\n    }\n\n    componentDidMount(){\n        const reqData = {\n            orgIdToken: getSessionCookie(ORG_TOKEN),\n            userTokenId: getSessionCookie(USER_TOKEN)\n        }\n        fetch('https://us-central1-multi-manage.cloudfunctions.net/getLoggedInUserData', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(reqData)})\n                .then(resp => resp.json())\n                .then(res => {\n                    if(res.status === \"deauth\"){\n                        deleteSessionCookies()\n                        deleteState()\n                        window.location.reload(false)\n                    }else\n                        return res\n                })\n                .then(resp => {\n                    this.props.updateUser(resp)\n                })\n                .catch(err => {\n                    if(err.status === \"deauth\"){\n                        deleteSessionCookies()\n                        deleteState()\n                        window.location.reload(false)\n                    }else\n                        throw err\n                })\n            \n        fetch('https://us-central1-multi-manage.cloudfunctions.net/getNavbarTablesData?orgId='+getSessionCookie(ORG_TOKEN)+'&tokenId='+getSessionCookie(USER_TOKEN))\n            .then(res => res.json())\n            .then(res => {\n                if(res.status === \"deauth\"){\n                    deleteSessionCookies()\n                    window.location.reload(false)\n                    deleteState()\n                }\n                return res\n            })\n            .then(res => {\n                this.props.updateTables(res)\n            })\n            .catch(err => {\n                if(err.status === \"deauth\"){\n                    deleteSessionCookies()\n                    deleteState()\n                    window.location.reload(false)\n                }else\n                    throw err\n            })\n        // }\n    }\n\n    render(){\n        return (\n            (this.props.userData !== undefined && this.props.userData !== null) ?\n                <nav>\n                    <ul id=\"top-bar\">\n\n                        <li onClick={() => {\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.href = \"/login\"\n                        }}> <label id=\"logout-icon\"><label id=\"logout-label\">Log out</label> <FiLogOut /></label> </li>\n\n                        <h1>Multi Manage</h1>\n\n                    </ul>\n\n                    <ul id=\"side-bar\">\n                        <li>\n                            <h3 id=\"user-navbar\">{this.props.userData.name}</h3>\n                            <h5 id=\"job-role-navbar\">{this.props.userData.jobRole}</h5>\n                        </li>\n\n                        {(this.props.userData.admin) ?\n                            <li className={(this.state.tableId === \"manage_tables\") ? \"checked-section\" : \"\"}> <a href=\"/?tableId=manage_tables\"> Manage tables </a></li> : \"\"}\n                        {(this.props.userData.admin) ?\n                                <li className={(this.state.tableId === \"manage_users\") ? \"checked-section\" : \"\"}> <a href=\"/?tableId=manage_users\"> Users </a></li> : \"\"}\n                        <li className=\"separator\">&nbsp;</li>\n                            \n                        {\n                            (this.props.tablesData !== null && this.props.tablesData !== undefined) ?\n                                this.props.tablesData.map(table => \n                                    <li key={table.tableId} className={(this.state.tableId === table.tableId) ? \"checked-section\" : \"\"} onClick={() => window.location.href = \"/?tableId=\"+table.tableId}>\n                                        {table.tableName}\n                                    </li>\n                                )\n                            : \"\"\n                        }\n                        \n                    </ul>\n                </nav>\n\n            : \"\"\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        userData: state.userData,\n        tablesData: state.tablesData\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateUser: (newUserData) => dispatch(updateUserData(newUserData)),\n        updateTables: (newTableData) => dispatch(updateTablesData(newTableData))\n    }\n}\n\nexport const Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(NavbarComponent)\n","import React from 'react'\nimport '../css/ModalBox.scss'\n\n/*\n    Props:\n    toggleModal => Function to toggle the modal box\n    dataFields => jsx data to be shown inside the modal box\n    isShown => Flag used to display or not the modal box\n*/\n\nconst ModalBox = (props) => {\n    return(\n        <div>\n            <div className=\"modal-bg\" onClick={props.toggleModal} style={{\n                    display: (props.isShown) ? \"grid\" : \"none\"\n                }}>\n                <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n                    {props.dataFields}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ModalBox","import React from 'react'\nimport '../css/ProcessingComponent.scss'\n\nconst ProcessingComponent = (props) => { \n    if(props.display === true){\n        return (\n            <div id=\"loader-bg\" style={{borderRadius: props.radius+\"px\"}}>\n                <div id=\"loader-container\">\n                    <img src={require('../assets/imgs/loading.svg')} alt=\"loading-anim\" width=\"100\" height=\"100\"/>\n                </div>\n            </div> )\n    }else{\n        return \"\"\n    }\n}\n\n\nexport default ProcessingComponent","import React from 'react'\nimport {IoIosRemoveCircleOutline} from 'react-icons/io'\nimport Checkbox from 'react-checkbox-component'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport ProcessingComponent from '../ProcessingComponent'\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\n\nclass AddFieldModalData extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            fieldName: \"\",\n            fieldType: 'text',\n            selectData: [],\n            displayTable: true,\n            selectFieldValue: \"\",\n            processingRequest: false,\n            dataSubmited: false\n        }\n    }\n\n    handleSelectFieldValueChange = (e) => this.setState({selectFieldValue: e.target.value})\n    handleFieldNameChange = (e) => this.setState({fieldName: e.target.value})\n    handleFieldTypeChange = (e) => this.setState({fieldType: e.target.value})\n    handleCheckboxChange = (e) => this.setState((state) => ({displayTable: !state.displayTable}))\n    addSelectValue = (e) => (this.state.selectFieldValue !== '') ? this.setState((state) => ({\n            selectData: [...state.selectData, state.selectFieldValue],\n            selectFieldValue: \"\"\n        })) : null\n    \n    removeSelectDataValue = (removeIndex) => {\n        let {selectData} = this.state\n        selectData.splice(removeIndex, 1)\n\n        this.setState({\n            selectData: selectData\n        })\n    }\n\n    submitUpdate = (e) => {\n        console.log(this.state.modalFieldData)\n\n        if(this.state.dataSubmited === false){\n            this.setState({dataSubmited: true, processingRequest: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/addTableField', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        orgId: getSessionCookie(ORG_TOKEN),\n                        tableId: getUrlParams(window.location.href).tableId,\n                        tokenId: getSessionCookie(USER_TOKEN),\n                        fieldName: this.state.fieldName,\n                        fieldType: this.state.fieldType,\n                        selectData: this.state.selectData,\n                        displayTable: this.state.displayTable,\n                    }),\n                })\n                .then(res => {\n                    console.log(res)\n                    if(res.json().status === \"deauth\"){\n                        deleteSessionCookies()\n                    }\n                    window.location.reload(false)\n                })\n                .catch(err => {\n                    throw err\n                })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest}/>\n\n                <h1>Create field</h1>\n                <form onSubmit={async (e) =>  {\n                    e.preventDefault()\n                }}>\n                    <div>\n                        <input type=\"text\" name=\"fieldName\" value={this.state.fieldName} onChange={this.handleFieldNameChange} placeholder=\"Field name\" className=\"txt-field\"/>\n                        <h3>Field type</h3>\n                        <div id=\"field-type-radio-group\">\n                            <input type=\"radio\" checked={this.state.fieldType === 'text'} onChange={this.handleFieldTypeChange} value=\"text\" id=\"text\" name=\"field-type\"/>\n                            <label for=\"text\">Text</label>\n                            <input type=\"radio\" checked={this.state.fieldType === 'date'} onChange={this.handleFieldTypeChange} value=\"date\" id=\"date\" name=\"field-type\"/>\n                            <label for=\"date\">Date</label>\n                            <input type=\"radio\" checked={this.state.fieldType === 'time'} onChange={this.handleFieldTypeChange} value=\"time\" id=\"time\" name=\"field-type\"/>\n                            <label for=\"time\">Time</label>\n                            <input type=\"radio\" checked={this.state.fieldType === 'number'} onChange={this.handleFieldTypeChange} value=\"number\" id=\"number\" name=\"field-type\"/>\n                            <label for=\"number\">Number</label>\n                            <input type=\"radio\" checked={this.state.fieldType === 'select'} onChange={this.handleFieldTypeChange} value=\"select\" id=\"select\" name=\"field-type\"/>\n                            <label for=\"select\">Select</label>\n                            <input type=\"radio\" checked={this.state.fieldType === 'checkbox'} onChange={this.handleFieldTypeChange} value=\"checkbox\" id=\"checkbox\" name=\"field-type\"/>\n                            <label for=\"checkbox\">Checkbox</label>\n                            <input type=\"radio\" checked={this.state.fieldType === 'tel'} onChange={this.handleFieldTypeChange} value=\"tel\" id=\"tel\" name=\"field-type\"/>\n                            <label for=\"tel\">Phone</label>\n                        </div>\n\n                        {\n                            (this.state.fieldType === 'select') ? \n                                <div>\n                                    <h3>Select Field Values</h3>\n                                        <div id=\"select-values\">\n                                            <div id=\"select-values-container\">\n                                                {this.state.selectData.map((value, i) => \n                                                    <div className=\"chip\">{value}\n                                                        <button className=\"remove-btn\" onClick={() => {\n                                                            this.removeSelectDataValue(i)\n                                                        }}><IoIosRemoveCircleOutline /></button></div>\n                                                )}\n                                            </div>\n                                            <div id=\"select-values-inputs\">\n                                                <input type=\"text\" className=\"txt-field\" placeholder=\"Select value\" value={this.state.selectFieldValue}\n                                                    /* onKeyDown={this.handleSelectValueKeyDown} */ onChange={this.handleSelectFieldValueChange}/>\n                                                <button className=\"btn\" onClick={this.addSelectValue} disabled={this.state.selectFieldValue === ''}>Add value</button>\n                                            </div>\n                                        </div>\n                                </div>\n                            : \"\"\n                        }\n\n                        <div className=\"table-display\">\n                            <Checkbox size=\"small\" onChange={this.handleCheckboxChange} color=\"#11152f\" isChecked={this.state.displayTable}/>\n                            <label>Display in dashboard table</label>\n                        </div>\n                    </div>\n                                            \n                    <input type=\"submit\" className=\"btn\" disabled={this.state.dataSubmited} onClick={this.submitUpdate} value=\"Submit changes\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddFieldModalData","export const validatePhoneField = (phone) => {\n    const validChars = \"+0123456789\"\n\n    for(let i = 0; i < phone.length; i++){\n        let isValid = false\n        for(let h = 0; h < validChars.length; h++)\n            if(phone.charAt(i) === validChars.charAt(h))\n                isValid = true\n        if(isValid === false)\n            return false\n    }\n\n    return true\n}\n\nexport const validateNumberField = (number) => !isNaN(number)","import React from 'react'\nimport AddFieldModalData from './AddFieldModalData'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport ProcessingComponent from '../ProcessingComponent'\nimport { deleteState } from '../../localStorage'\nimport {validatePhoneField} from '../../helpers/inputValidation.js'\n\nclass AddNewTableRow extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            dataSubmited: false,\n            tableData: null,\n            tableName: \"\",\n            fieldController: null,\n            processingData: false\n        }\n    }\n\n    componentDidUpdate(pP, prevState){\n        if(prevState.tableData === null && this.props.tableData !== prevState.tableData)\n            this.setState({tableData: this.props.tableData})\n        if(prevState.fieldController === null && this.props.fieldController !== prevState.fieldController)\n            this.setState({fieldController: this.props.fieldController})\n    }\n\n    handleInputChange = (e, type) => {\n        let {fieldController} = this.state\n\n        switch(type){\n            case 'tel':\n                const isValid = validatePhoneField(e.target.value)\n                if(isValid === true)\n                    fieldController[e.target.name] = e.target.value\n                break\n\n            case 'email':\n                if(e.target.value.includes(\" \") === false)\n                    fieldController[e.target.name] = e.target.value\n                break\n            default:\n                fieldController[e.target.name] = e.target.value\n\n                \n        }\n\n        this.setState({\n            fieldController: fieldController\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <ProcessingComponent  radius=\"0\" display={this.state.processingData} />\n                <h1>Add new item</h1>\n                <form onSubmit={async (e) =>  {\n                    e.preventDefault()\n                    this.setState({dataSubmited: true, processingData: true})\n                    if(this.state.dataSubmited === false)\n                        fetch('https://us-central1-multi-manage.cloudfunctions.net/addTableRow', {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({\n                                orgId: getSessionCookie(ORG_TOKEN),\n                                tokenId: getSessionCookie(USER_TOKEN),\n                                tableId: this.state.tableData._id,\n                                tableData: JSON.stringify(this.state.fieldController)\n                            }),\n                        })\n                        .then(res => {\n                            if(res.json().status === \"deauth\"){\n                                deleteSessionCookies()\n                                deleteState()\n                            }\n                            window.location.reload(false)\n                            return res\n                        }).catch(err => {\n                            if(err.status === \"deauth\")\n                                deleteSessionCookies()\n                            else\n                                throw err\n                        })\n                }}>\n                    {\n                        (this.state.tableData !== null) ?\n                            this.state.tableData.fields.map(field => \n                                (field.type === 'select') ?\n                                    <select key={field.name} className=\"txt-field\" onChange={this.handleInputChange} name={field.name}>\n                                        {field.select_data.map((selectValue, i) => \n                                            <option key={selectValue+\"-\"+i} value={selectValue}>{selectValue}</option>)}\n                                    </select>\n                                :\n                                    <input key={field.name} type={field.type} value={this.state.fieldController[field.name]} onChange={e => this.handleInputChange(e, field.type)} name={field.name} className=\"txt-field\" placeholder={field.name}/>\n        \n                            )\n                        : \"\"\n                    }\n                    <input type=\"submit\" className=\"btn\" disabled={this.state.dataSubmited} value=\"Add new item\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddNewTableRow","import React from 'react'\nimport ModalBox from '../ModalBox'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport AddNewTableRow from '../ModalComponents/AddNewTableRow'\nimport { deleteState } from '../../localStorage'\n\nclass CustomTable extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            tableData: null,\n            tableName: \"\",\n            showModal: false,\n            dataFields: \"\",\n            fieldController: {},\n            tablePage: 1,\n            nPages: 1\n        }\n    }\n\n    componentDidMount(){\n        this.getTableRows(this.state.tablePage)\n            .then(res => res.json())\n            .then(res => {\n                if(res.status === \"deauth\"){\n                    deleteSessionCookies()\n                    deleteState()\n                    window.location.reload(false)\n                }\n                return res\n            })\n            .then(res => {\n                let fieldController = {}\n\n                console.log(res)\n\n                res.tableData.fields.forEach(field => {\n                    if(field.type === 'select')\n                        fieldController[field.name] = field.select_data[0]\n                    else\n                        fieldController[field.name] = \"\"\n                })\n\n                res.tableData.data = {\"1\": res.tableData.data}\n\n                this.setState({\n                    tableData: res.tableData,\n                    tableName: res.tableData.name,  \n                    fieldController: fieldController,\n                    nPages: res.nPages\n                })\n            }).catch(err => {\n                // console.log(err)\n                if(err.status === \"deauth\"){\n                    deleteSessionCookies()\n                    deleteState()\n                    window.location.reload(false)\n                }\n                // throw err\n            })\n    }\n\n    getTableRows = (nPage) => {\n        return fetch('https://us-central1-multi-manage.cloudfunctions.net/getOrgTableData?page='+nPage+'&orgId='+getSessionCookie(ORG_TOKEN)+'&tableId='+this.props.tableId+'&tokenId='+getSessionCookie(USER_TOKEN))\n    }\n    \n    handleRowClick = (index) => {\n      window.location.href = \"/viewrow?tableId=\"+this.state.tableData._id+\"&rowIndex=\"+index\n    }\n\n    toggleModal = () => {\n        const { showModal } = this.state\n        this.setState({\n            showModal: !showModal\n        })\n    }\n\n    nextPage = () => {\n        let {tablePage, tableData} = this.state\n        if(tablePage < this.state.nPages){\n            if(tableData.data[tablePage+1+\"\"] === undefined){\n                this.getTableRows(tablePage+1)\n                    .then(res => res.json())\n                    .then(res => {\n                        if(res.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }\n                        return res\n                    })\n                    .then(res => {\n                        tableData.data[tablePage+1+\"\"] = res.tableData.data\n        \n                        this.setState({\n                            tableData: tableData,\n                            nPages: res.nPages,\n                            tablePage: tablePage+1\n                        })\n                    }).catch(err => {\n                        if(err.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }\n                    })\n            }else\n                this.setState(prevState => ({tablePage: prevState.tablePage+1}))\n        }\n    }\n\n    prevPage = () => {\n        let {tablePage, tableData} = this.state\n        if(tablePage > 1){\n            if(tableData.data[(tablePage-1)+\"\"] === undefined){\n                this.getTableRows((tablePage-1))\n                    .then(res => res.json())\n                    .then(res => {\n                        if(res.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }\n                        return res\n                    })\n                    .then(res => {\n                        tableData.data[(tablePage-1)+\"\"] = res.tableData.data\n        \n                        this.setState({\n                            tableData: tableData,\n                            nPages: res.nPages,\n                            tablePage: tablePage-1\n                        })\n                    }).catch(err => {\n                        if(err.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }\n                    })\n            }else\n                this.setState(prevState => ({tablePage: prevState.tablePage-1}))\n        }\n    }\n\n    // prevPage = () => (this.state.tablePage > 0) ? this.setState(prevState => ({tablePage: prevState.tablePage-1})) : \"\"\n    \n    render(){\n        return (\n\n            <div id=\"content\">\n                <ModalBox dataFields={<AddNewTableRow tableData={this.state.tableData} fieldController={this.state.fieldController}/>} isShown={this.state.showModal} toggleModal={this.toggleModal}/>\n\n                <h1>{ this.state.tableName }</h1>\n\n                <div id=\"table-container\">\n                    <div className=\"actions\">\n                        <button className=\"btn\" onClick={this.toggleModal}>Add item</button>\n                        <input type=\"text\" className=\"txt-field\" placeholder=\"search\"/>\n                    </div>\n                    <div id=\"table\">\n                        {\n                            (this.state.tableData !== null) ?\n                                <table>\n                                    <thead>\n                                        <tr>\n                                            {this.state.tableData.fields.map(field => \n                                                (field.display_table) ?\n                                                    <th key={field.name}>{field.name}</th> : \"\")\n                                            }\n                                        </tr>\n                                    </thead>\n\n                                    <tbody>\n                                        {this.state.tableData.data[this.state.tablePage+\"\"].map((row, i) => \n                                            <tr key={i} onClick={() => this.handleRowClick(i)}>\n                                                {this.state.tableData.fields.map(field => \n                                                    (field.display_table) ? \n                                                        <td key={row[field.name]+\"-\"+i}>{row[field.name]}</td> : \"\")}\n                                            </tr>\n                                        )}\n                                    </tbody>\n                                </table>\n                            : \"\"\n                        }\n                    </div>\n                    {\n                        (this.state.nPages !== 1) ? \n                            <div id=\"pagination-container\">\n                                <button className=\"btn\" onClick={this.prevPage}> &lt; </button>\n                                <label>{this.state.tablePage} of {this.state.nPages}</label>\n                                <button className=\"btn\" onClick={this.nextPage}>&gt;</button>\n                            </div>\n                        : \"\"\n                    }\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default CustomTable","class TableModel{\n    constructor(){\n        this.name = \"\"\n        this.fields = \"\"\n    }\n\n    setName(name){\n        this.name = name\n    }\n\n    setFields(fields){\n        this.fields = fields\n    }\n}\n\nexport default TableModel","import React from 'react'\nimport { MdAdd } from \"react-icons/md\";\nimport { IoIosRemoveCircleOutline } from \"react-icons/io\";\nimport Checkbox from 'react-checkbox-component'\nimport TableModel from '../../models/tableModel'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies} from '../../helpers/session/auth.js'\nimport ProcessingComponent from '../ProcessingComponent';\nimport { deleteState } from '../../localStorage';\n\nclass AddFields extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            tableName: \"\",\n            fieldName: \"\",\n            fieldType: \"text\",\n            newFieldsData : [],\n            selectValues: [],\n            selectFieldValue: \"\",\n            cbChecked: true,\n            processingRequest: false,\n            dataSubmited: false\n        }\n    }\n\n    appendNewField = () => {\n        if(this.state.fieldName !== ''){\n            let newField = {\n                fieldName: this.state.fieldName,\n                fieldType: this.state.fieldType,\n                displayInTable: this.state.cbChecked,\n                selectValues: this.state.selectValues\n            }\n\n            this.setState((prevState) => ({\n                newFieldsData: [newField, ...prevState.newFieldsData],\n                fieldName: \"\",\n                fieldType: \"text\",\n                cbChecked: true,\n                selectValues: []\n            }))\n        }\n    }\n\n    removeItem = (pos) => {\n        let {newFieldsData} = this.state\n        newFieldsData.splice(pos, 1)\n        \n        this.setState({\n            newFieldsData: newFieldsData\n        })\n    }\n\n    appendSelectValue = () => {\n        if(this.state.selectFieldValue !== ''){\n            this.setState((prevState) => ({\n                selectValues: [...prevState.selectValues, prevState.selectFieldValue],\n                selectFieldValue: \"\",\n            }))\n        }\n    }\n\n    removeSelectValue = (i) => {\n        let {selectValues} = this.state\n\n        selectValues.splice(i, 1)\n        this.setState({\n            selectValues: selectValues\n        })\n    }\n\n    handleOnEnterPressed = (e) => {\n        if(e.key === 'Enter' && this.state.fieldName !== '' && !(this.state.fieldType === 'select' && this.state.selectValues.length === 0))\n            this.appendNewField(this.state.item)\n    }\n\n    handleFieldNameInputChange = (e) => {\n        this.setState({\n            fieldName: e.target.value\n        })\n    }\n\n    handleRadioButtonsChange = (e) => {\n        this.setState({\n            fieldType: e.target.value\n        })\n    }\n\n    handleSelectValueKeyDown = (e) => {\n        console.log(\"appending\")\n\n        if(e.key === 'Enter' && this.state.selectFieldValue !== '')\n            this.appendSelectValue()\n    }\n\n    handleSelectFieldValueInputChange = (e) => {\n        this.setState({\n            selectFieldValue: e.target.value\n        })\n    }\n\n    handleTableNameInputChange = (e) => {\n        this.setState({\n            tableName: e.target.value\n        })\n    }\n\n    handleTableDispCheckbox = () => {\n        this.setState((prevState) => ({\n            cbChecked: !prevState.cbChecked\n        }))\n    }\n\n    submitNewTable = async () => {\n        const tableModel = new TableModel()\n        tableModel.setName(this.state.tableName)\n        tableModel.setFields(this.state.newFieldsData.reverse())\n\n        if(this.state.dataSubmited === false){\n            this.setState({processingRequest: true, dataSubmited: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/createTable', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        orgId: getSessionCookie(ORG_TOKEN),\n                        tokenId: getSessionCookie(USER_TOKEN),\n                        tableData: tableModel,\n                    }),\n                })\n                .then(res => {\n                    if(res.json().status === \"deauth\"){\n                        deleteSessionCookies()\n                        window.location.reload(false)\n                    }\n                    return res\n                }).then(e => {\n                    window.location.reload(false)\n                }).catch(err => {\n                    if(err.status === \"deauth\"){\n                        deleteSessionCookies()\n                        deleteState()\n                        window.location.reload(false)\n                    }else\n                        throw err\n                })\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                <h1>Create new table</h1>\n                <div>\n                    <input type=\"text\" className=\"txt-field\" onChange={this.handleTableNameInputChange} value={this.state.tableName} placeholder=\"Table name\"/>\n                    <div id=\"add-fields-container\">\n                    <ul id=\"fields-list\">\n                        {this.state.newFieldsData.map((field, i) => \n                            <li key={field.fieldName}>\n                                <label>{field.fieldName}</label> <label>{(field.fieldType === 'tel') ? \"phone\": field.fieldType} {(field.fieldType === 'select') ? '['+field.selectValues.join(', ')+']' : \"\"} &nbsp; {(field.displayInTable) ? \"Display in table\" : \"\"}</label>\n                                <button className=\"remove-btn\" onClick={() => {\n                                    this.removeItem(i)\n                                }}><IoIosRemoveCircleOutline /></button>\n                            </li>\n                        )}\n                    </ul>\n                    <div id=\"inputs-container\" >\n                        <button className=\"btn\" onClick={this.appendNewField}\n                            disabled={(this.state.fieldName === '' || (this.state.fieldType === 'select' && this.state.selectValues.length === 0))}><MdAdd /></button>\n                        <input type=\"text\" className=\"txt-field\"\n                            onChange={this.handleFieldNameInputChange} onKeyDown={this.handleOnEnterPressed}\n                            value={this.state.fieldName} placeholder=\"Field name\"/>\n                        <div id=\"properties\">\n                            <div id=\"field-type-radio-group\">\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'text')} value=\"text\" id=\"text\" name=\"field-type\"/>\n                                <label htmlFor=\"text\">Text</label>\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'date')} value=\"date\" id=\"date\" name=\"field-type\"/>\n                                <label htmlFor=\"date\">Date</label>\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'time')} value=\"time\" id=\"time\" name=\"field-type\"/>\n                                <label htmlFor=\"time\">Time</label>\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'number')} value=\"number\" id=\"number\" name=\"field-type\"/>\n                                <label htmlFor=\"number\">Number</label>\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'select')} value=\"select\" id=\"select\" name=\"field-type\"/>\n                                <label htmlFor=\"select\">Select</label>\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'checkbox')} value=\"checkbox\" id=\"checkbox\" name=\"field-type\"/>\n                                <label htmlFor=\"checkbox\">Checkbox</label>\n                                <input type=\"radio\" onChange={this.handleRadioButtonsChange} onKeyDown={this.handleOnEnterPressed}\n                                    checked={(this.state.fieldType === 'tel')} value=\"tel\" id=\"tel\" name=\"field-type\"/>\n                                <label htmlFor=\"tel\">Phone</label>\n                            </div>\n                            <div id=\"table-display\">\n                                <Checkbox size=\"small\" onChange={this.handleTableDispCheckbox} color=\"#11152f\" isChecked={this.state.cbChecked}/>\n                                <label>Display in dashboard table</label>\n                            </div>\n                        </div>\n\n                        {\n                            (this.state.fieldType === 'select') ? \n                                <div id=\"select-values\">\n                                    <div id=\"select-values-container\">\n                                        {this.state.selectValues.map((value, i) => \n                                            <div className=\"chip\">{value}\n                                                <button className=\"remove-btn\" onClick={() => {\n                                                    this.removeSelectValue(i)\n                                                }}><IoIosRemoveCircleOutline /></button></div>\n                                        )}\n                                    </div>\n                                    <div id=\"select-values-inputs\">\n                                        <input type=\"text\" className=\"txt-field\" placeholder=\"Select value\" value={this.state.selectFieldValue}\n                                            onKeyDown={this.handleSelectValueKeyDown} onChange={this.handleSelectFieldValueInputChange}/>\n                                        <button className=\"btn\" onClick={this.appendSelectValue}>Add value</button>\n                                    </div>\n                                    \n                                </div>\n                            : \"\"\n                        }\n                    </div>\n                    </div>\n                    <input type=\"button\" onClick={this.submitNewTable} className=\"btn\" disabled={(this.state.tableName === '' || this.state.newFieldsData.length === 0 || this.state.dataSubmited === true)} value=\"Add new item\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddFields","import React from 'react'\nimport AddFields from '../ModalComponents/AddFields'\nimport ModalBox from '../ModalBox'\n\nimport {connect} from 'react-redux'\n\nclass TablesManageComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            dataFields: <AddFields />\n        }\n    }\n    \n    handleRowClick = (tableId) => {\n        window.location.href = \"/viewrow?type=manage_tables&tableId=\"+tableId\n    }\n\n    toggleModal = () => {\n        const { showModal } = this.state\n        this.setState({\n            showModal: !showModal\n        })\n    }\n    \n    render(){\n        return (\n            <div id=\"content\">\n                <ModalBox dataFields={this.state.dataFields} isShown={this.state.showModal} toggleModal={this.toggleModal}/>\n                <h1>Tables Manager</h1>\n\n                <div id=\"table-container\">\n                    <div className=\"actions\">\n                        <button className=\"btn\" onClick={this.toggleModal}>Add item</button>\n                        <input type=\"text\" className=\"txt-field\" placeholder=\"search\"/>\n                    </div>\n                    <div id=\"table\">\n                        {(this.props.tablesData !== undefined && this.props.tablesData !== null) ?\n                            <table>\n                                <thead>\n                                    <tr><th>Table name</th></tr>\n                                </thead>\n\n                                <tbody>\n                                    {this.props.tablesData.map((table, i) => \n                                        <tr key={table.tableName} onClick={() => this.handleRowClick(table.tableId, table.tableName)}>\n                                            <td>{table.tableName}</td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n                        : \"\"}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.userData,\n    tablesData: state.tablesData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport const TablesManage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TablesManageComponent)\n","import React from 'react'\nimport { deleteSessionCookies, getSessionCookie, ORG_TOKEN, USER_TOKEN } from '../../helpers/session/auth.js'\nimport ProcessingComponent from '../ProcessingComponent.jsx'\nimport { deleteState } from '../../localStorage.js'\nimport {validatePhoneField, validateNumberField} from '../../helpers/inputValidation.js'\n\nclass CreateUserModal extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            name: \"\",\n            username: \"\",\n            phone: \"\",\n            email: \"\",\n            password: \"\",\n            confPassword: \"\",\n            admin: false,\n            jobRole: \"\",\n            processingRequest: false,\n            dataSubmited: false\n        }\n    }\n\n    submitUserCreationReq = async (e) => {\n        e.preventDefault()\n        if(this.state.password === this.state.confPassword && this.state.dataSubmited === false){\n            this.setState({dataSubmited: true, processingRequest: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/registerUser', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    orgId: getSessionCookie(ORG_TOKEN),\n                    tokenId: getSessionCookie(USER_TOKEN),\n                    fullName: this.state.name,\n                    username: this.state.username,\n                    phone: this.state.phone,\n                    email: this.state.email,\n                    password: this.state.password,\n                    isAdmin: this.state.admin,\n                    jobRole: this.state.jobRole,\n                }),\n            })\n            .then(res => {\n                console.log(res)\n                if(res.json().status === \"deauth\"){\n                    deleteSessionCookies()\n                    deleteState()\n                }\n                window.location.reload(false)\n            }).catch(err => {\n                if(err.status === \"deauth\"){\n                    deleteSessionCookies()\n                    deleteState()\n                    window.location.reload(false)\n                }else\n                    throw err\n            })\n        }\n    }\n\n    handleInputChange = (e) => {\n        let currState = this.state\n        // currState[e.target.name] = e.target.value\n\n        switch(e.target.name){\n            case 'email':\n            case 'username':\n                if(e.target.value.includes(\" \") === false)\n                    currState[e.target.name] = e.target.value\n                break\n            case 'phone':\n                const isValid = validatePhoneField(e.target.value)\n                if(isValid === true)\n                    currState[e.target.name] = e.target.value\n                break\n            case 'admin':\n                currState.admin = (currState.admin === 'true') ? true : false\n                break\n            default:\n                currState[e.target.name] = e.target.value\n        }\n\n        this.setState(currState)\n    }\n\n    render(){\n        return (\n            <div>\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                <h1>Create new user</h1>\n                <form onSubmit={this.submitUserCreationReq}>\n                    <input type=\"text\" onChange={this.handleInputChange} value={this.state.name} className=\"txt-field\" name=\"name\" placeholder=\"Name\" />\n                    <input type=\"text\" onChange={this.handleInputChange} value={this.state.username} className=\"txt-field\" name=\"username\" placeholder=\"Username\" />\n                    <input type=\"email\" onChange={this.handleInputChange} value={this.state.email} className=\"txt-field\" name=\"email\" placeholder=\"Email\" />\n                    <input type=\"text\" onChange={this.handleInputChange} value={this.state.phone} className=\"txt-field\" name=\"phone\" placeholder=\"Phone\" />\n                    <input type=\"text\" onChange={this.handleInputChange} value={this.state.jobRole} className=\"txt-field\" name=\"jobRole\" placeholder=\"Job Role\" />\n                    <input type=\"password\" onChange={this.handleInputChange} value={this.state.password} className=\"txt-field\" name=\"password\" placeholder=\"Password\" />\n                    <input type=\"password\" onChange={this.handleInputChange} value={this.state.confPassword} className=\"txt-field\" name=\"confPassword\" placeholder=\"Confirm Password\" />\n                    <label style={{float: \"left\"}}>Admin: </label>\n                    <select onChange={this.handleInputChange} value={this.state.admin} className=\"txt-field\" name=\"admin\" >\n                        <option value={true}>Yes</option>\n                        <option value={false}>No</option>\n                    </select>\n                    \n                    <input type=\"submit\" className=\"btn\" disabled={this.state.dataSubmited} value=\"Add new item\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CreateUserModal","import React from 'react'\nimport { deleteSessionCookies, getSessionCookie, ORG_TOKEN, USER_TOKEN } from '../../helpers/session/auth.js'\nimport { deleteState } from '../../localStorage.js'\nimport {connect} from 'react-redux'\nimport ModalBox from '../ModalBox'\nimport CreateUserModal from '../ModalComponents/CreateUserModal'\n\nclass UsersManageComponent extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            usersData: null,\n            showModal: false,\n            tablePage: 1,\n            nPages: 1\n        }\n    }\n\n    componentDidMount(){\n        this.getTableRows(this.state.tablePage)\n            .then(res => {\n                switch(res.status){\n                    case 200:\n                        return res.json()\n                    case 401:\n                        window.location = \"/\"\n                        break\n                    default:\n                        window.location = \"/\"\n                }\n            })\n            .then(res => {\n                if(res.status === \"deauth\"){\n                    deleteSessionCookies()\n                    window.location.reload(false)\n                    deleteState()\n                }else{\n                    this.setState({\n                        usersData: {\"1\": res.usersData},\n                        nPages: res.nPages\n                    })\n                }\n            })\n            .catch(err => {\n                if(err.status === \"deauth\"){\n                    deleteSessionCookies()\n                    deleteState()\n                }else\n                    throw err\n            })\n    }\n\n    getTableRows = (nPage) => {\n        return fetch('https://us-central1-multi-manage.cloudfunctions.net/getOrgUsers?page='+nPage+'&orgId='+getSessionCookie(ORG_TOKEN)+'&tokenId='+getSessionCookie(USER_TOKEN))\n    }\n    \n    handleRowClick = (userId) => {\n      window.location.href = \"/viewrow?type=manage_users&userId=\"+userId\n    }\n\n    toggleModal = () => {\n        const { showModal } = this.state\n        this.setState({\n            showModal: !showModal\n        })\n    }\n\n    nextPage = () => {\n        let {tablePage, usersData} = this.state\n        // console.log(tableData[tablePage+1+\"\"])\n        if(tablePage < this.state.nPages){\n            if(usersData[tablePage+1+\"\"] === undefined){\n                this.getTableRows(tablePage+1)\n                    .then(res => {\n                        switch(res.status){\n                            case 200:\n                                return res.json()\n                            case 401:\n                                window.location = \"/\"\n                                break\n                            default:\n                                window.location = \"/\"\n                        }\n                    })\n                    .then(res => {\n                        if(res.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }else{\n                            usersData[tablePage+1+\"\"] = res.usersData\n            \n                            this.setState({\n                                usersData: usersData,\n                                nPages: res.nPages,\n                                tablePage: tablePage+1\n                            })\n                        }\n                    })\n                    .catch(err => {\n                        if(err.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }else\n                            throw err\n                    })\n            }else\n                this.setState(prevState => ({tablePage: prevState.tablePage+1}))\n        }\n    }\n\n\n    prevPage = () => {\n        let {tablePage, usersData} = this.state\n        // console.log(tableData[tablePage+1+\"\"])\n        if(tablePage > 1){\n            if(usersData[(tablePage-1)+\"\"] === undefined){\n                this.getTableRows((tablePage-1))\n                    .then(res => {\n                        switch(res.status){\n                            case 200:\n                                return res.json()\n                            case 401:\n                                window.location = \"/\"\n                                break\n                            default:\n                                window.location = \"/\"\n                        }\n                    })\n                    .then(res => {\n                        if(res.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }else{\n                            usersData[(tablePage-1)+\"\"] = res.usersData\n            \n                            this.setState({\n                                usersData: usersData,\n                                nPages: res.nPages,\n                                tablePage: tablePage-1\n                            })\n                        }\n                    })\n                    .catch(err => {\n                        if(err.status === \"deauth\"){\n                            deleteSessionCookies()\n                            deleteState()\n                            window.location.reload(false)\n                        }else\n                            throw err\n                    })\n            }else\n                this.setState(prevState => ({tablePage: prevState.tablePage-1}))\n        }\n    }\n    \n    render(){\n        return (\n            <div id=\"content\">\n                <ModalBox dataFields={<CreateUserModal />} isShown={this.state.showModal} toggleModal={this.toggleModal}/>\n\n                <h1>Users Manager</h1>\n                <div id=\"table-container\">\n                    <div className=\"actions\">\n                        <button className=\"btn\" onClick={this.toggleModal}>Add item</button>\n                        <input type=\"text\" className=\"txt-field\" placeholder=\"search\"/>\n                    </div>\n\n                    {(this.state.usersData !== null && this.state.usersData !== undefined) ?\n                        <div id=\"table\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                    <th>User</th>\n                                    <th>Username</th>\n                                    <th>Job Role</th>\n                                    <th>Admin</th>\n                                    </tr>\n                                </thead>\n\n                                    <tbody>\n                                            {this.state.usersData[this.state.tablePage+\"\"].map(user => \n                                                <tr key={user._id} onClick={() => this.handleRowClick(user._id)}>\n                                                    <td>{user.name}</td>\n                                                    <td>{user.username}</td>\n                                                    <td>{user.jobRole}</td>\n                                                    <td>{(user.admin === true) ? \"Yes\" : \"No\"}</td>\n                                                </tr>\n                                            )}\n                                    </tbody>\n                            </table>\n                        </div>\n                    : \"\"}\n                    {\n                        (this.state.nPages !== 1) ? \n                            <div id=\"pagination-container\">\n                                <button className=\"btn\" onClick={this.prevPage}> &lt; </button>\n                                <label>{this.state.tablePage} of {this.state.nPages}</label>\n                                <button className=\"btn\" onClick={this.nextPage}>&gt;</button>\n                            </div>\n                        : \"\"\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.userData,\n    tablesData: state.tablesData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {}\n}\n\nexport const UsersManage = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsersManageComponent)\n","import React from 'react';\nimport './css/App.css';\nimport './css/Dashboard.scss';\nimport {Navbar} from './components/Navbar'\nimport CustomTable from './components/TableDataComponents/CustomTable'\nimport {TablesManage} from './components/TableDataComponents/TablesManage'\nimport {UsersManage} from './components/TableDataComponents/UsersManage'\n\nimport {connect} from 'react-redux'\nimport {updateUserData, updateTablesData} from './actions.js'\nimport { deleteState } from './localStorage.js'\nimport { deleteSessionCookies, getSessionCookie, ORG_TOKEN, USER_TOKEN } from './helpers/session/auth.js'\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    const params = getUrlParams(window.location.href)\n    this.state = {\n      tableId: params.tableId,\n    }\n\n    if((this.state.tableId === 'manage_tables' || this.state.tableId === 'manage_users') && this.props.userData.admin === false)\n      window.location = \"/\"\n\n    if(this.state.tableId === undefined)\n      if(this.props.tablesData[0] === undefined)\n        fetch('https://us-central1-multi-manage.cloudfunctions.net/getNavbarTablesData?orgId='+getSessionCookie(ORG_TOKEN)+'&tokenId='+getSessionCookie(USER_TOKEN))\n          .then(res => res.json())\n          .then(res => {\n              if(res.status === \"deauth\"){\n                  deleteSessionCookies()\n                  deleteState()\n                  window.location.reload(false)\n              }\n              return res\n          })\n          .then(res => {\n              this.props.updateTables(res)\n              window.location.reload(false)\n          })\n          .catch(err => {\n              if(err.status === \"deauth\"){\n                deleteSessionCookies()\n                deleteState()\n                window.location.reload(false)\n              }else\n                throw err\n          })\n      else if(this.props.tablesData.length > 0)\n        window.location = \"/?tableId=\"+this.props.tablesData[0].tableId\n\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n   \n        <Navbar />\n        \n        <div id=\"dashboard-content\">\n          {\n            (this.state.tableId === 'manage_tables') ?\n              <TablesManage/>\n            : (this.state.tableId === 'manage_users') ?\n              <UsersManage />\n            :\n              <CustomTable tableId={this.state.tableId}/>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.userData,\n    tablesData: state.tablesData\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: (newUserData) => dispatch(updateUserData(newUserData)),\n    updateTables: (newTableData) => dispatch(updateTablesData(newTableData))\n  }\n}\n\nexport const AppComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import React from 'react';\nimport { setSessionCookie, USER_TOKEN, ORG_TOKEN, isSessionCookieSet } from './helpers/session/auth.js'\nimport './css/AuthPage.scss'\nimport ProcessingComponent from './components/ProcessingComponent'\n\nclass Login extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            orgId: \"\",\n            orgPassword: \"\",\n            cred: \"\",\n            userEmail: \"\",\n            userPassword: \"\",\n            loginState: \"org_login\",\n            isProcessing: false\n        }\n        \n    }\n\n    orgIdHandlerOnChange = (e) => {\n        this.setState({\n            orgId: e.target.value\n        })\n    }\n\n    orgPasswordHandlerOnChange = (e) => {\n        this.setState({\n            orgPassword: e.target.value\n        })\n    }\n\n\n    userEmailHandlerOnChange = (e) => {\n        this.setState({\n            userEmail: e.target.value\n        })\n    }\n\n    userPasswordHandlerOnChange = (e) => {\n        this.setState({\n            userPassword: e.target.value\n        })\n    }\n\n    authTypeHandler = () => {window.location = \"/register\"}\n\n    goToPrevLoginStep = () => this.setState({\n        loginState: \"org_login\",\n        cred: \"\"\n    })\n\n    render(){\n        return (isSessionCookieSet(USER_TOKEN) && isSessionCookieSet(ORG_TOKEN)) ?\n                    window.location = \"/\"\n                :\n                <div className='auth-bg'>\n                    <ProcessingComponent radius=\"0\" display={this.state.isProcessing}/>\n                    <div className='container'>\n                        <div className=\"auth-container\">\n                            \n                            {(this.state.loginState === 'org_login')\n                                ?\n                                    <div>\n                                        <h1>Organization Log in</h1>\n\n        \n                                        <form onSubmit={async e =>  {\n                                            e.preventDefault();\n                                            this.setState({isProcessing: true})\n                                            const reqData = {\n                                                name_id: this.state.orgId,\n                                                password: this.state.orgPassword\n                                            }\n                                            \n                                            fetch('https://us-central1-multi-manage.cloudfunctions.net/orgLogin', {\n                                                method: 'POST',\n                                                headers: { 'Content-Type': 'application/json' },\n                                                body: JSON.stringify(reqData)})\n                                                .then(res => res.json())\n                                                .then(orgLoginResp => {\n                                                    console.log(orgLoginResp)\n                                                    if(orgLoginResp.status === 'success'){\n                                                        this.setState({\n                                                            cred: orgLoginResp.cred,\n                                                            loginState: 'user_login',\n                                                        })\n                                                    }\n                                                    this.setState({isProcessing: false})\n                                                })\n                                                .catch(e => this.setState({isProcessing: false}))\n                                            }}>\n                                            <input type=\"text\" className=\"txt-field\" value={this.state.orgId} onChange={this.orgIdHandlerOnChange} placeholder=\"Organization id\"/>\n                                            <input type=\"password\" className=\"txt-field\" value={this.state.orgPassword} onChange={this.orgPasswordHandlerOnChange} placeholder=\"Password\"/>\n                    \n                                            <input type=\"submit\" className=\"btn auth-submit\" value=\"Log in organization\"/>\n                                        </form>\n                                        <button className=\"button-label\" onClick={this.authTypeHandler}>New to the app? Register your organization now!</button>\n                                    </div>\n                                : (this.state.loginState === 'user_login') ?\n                                    <div>\n                                        <h1>User Log in</h1>\n\n\n        \n                                        <form onSubmit={e => {\n                                            e.preventDefault();\n                                            this.setState({isProcessing: true})\n                                            const reqData = {\n                                                orgId: this.state.cred,\n                                                userEmail: this.state.userEmail,\n                                                userPassword: this.state.userPassword\n                                            }\n                                            \n                                            fetch('https://us-central1-multi-manage.cloudfunctions.net/userLogin', {\n                                                method: 'POST',\n                                                headers: { 'Content-Type': 'application/json' },\n                                                body: JSON.stringify(reqData)})\n                                                .then(res => res.json())\n                                                .then(userLoginResp => {\n                                                    console.log(userLoginResp)\n                                                    if(userLoginResp.status === 'success'){\n                                                        setSessionCookie(USER_TOKEN, userLoginResp.userIdToken)\n                                                        setSessionCookie(ORG_TOKEN, reqData.orgId)\n                                                        window.location = \"/\"\n                                                    }else{\n                                                        this.setState({isProcessing: false})\n                                                    }\n                                                    // Manage session here!!!\n                                                })\n                                                .catch(e => this.setState({isProcessing: false}))\n                                            }}>\n                                            <input type=\"email\" className=\"txt-field\" value={this.state.userEmail} onChange={this.userEmailHandlerOnChange} placeholder=\"User email\" required/>\n                                            <input type=\"password\" className=\"txt-field\" value={this.state.userPassword} onChange={this.userPasswordHandlerOnChange} placeholder=\"User Password\" required/>\n                    \n                                            <input type=\"submit\" className=\"btn auth-submit\" value=\"Log in organization\"/>\n                                            <button className=\"button-label\" onClick={(e) => {\n                                                e.preventDefault()\n                                                window.location.href = \"/register\"}}>New to the app? Register your organization now!</button>\n\n                                            <button className=\"secondary-btn voltar-btn\" onClick={this.goToPrevLoginStep}>Voltar</button>\n                                        </form>\n                                    </div>\n                                : \"\"\n        \n                            }\n                        </div>\n                        <div className=\"auth-separator\"></div>\n                        <div className=\"auth-image\">\n                            <img src={require('./assets/imgs/auth_manager.jpg')} alt=\"auth-manager\" />\n                        </div>\n                    </div>\n                </div>\n            \n        \n    }\n}\n\nexport default Login","import React from 'react';\nimport './css/AuthPage.scss'\nimport { USER_TOKEN, ORG_TOKEN, isSessionCookieSet } from './helpers/session/auth.js'\nimport ProcessingComponent from './components/ProcessingComponent'\nimport {validatePhoneField} from './helpers/inputValidation.js'\n\nclass Register extends React.Component{\n    constructor(){\n        super()\n\n        this.state = {\n            passwordEqual: false,\n            dataSubmited: true,\n            nameIdUnique: true,\n            formData: {\n                orgId: '',\n                orgName: '',\n                orgPassword: '',\n                orgConfPassword: '',\n                orgEmail: '',\n\n                userFullName: '',\n                username: '',\n                userPhone: '',\n                userEmail: '',\n                userPassword: '',\n                userConfPassword: '',\n                jobRole: ''\n            },\n            registerStep: 'org', // org - user_register,\n            isProcessing: false\n        }\n    }\n\n    validateFields = (formData,) => {\n        const {orgId, orgPassword, orgConfPassword, userPassword, userConfPassword, username} = formData\n        const {nameIdUnique} = this.state\n        let isPasswordValid\n        \n        switch(this.state.registerStep){\n            case 'org':\n                isPasswordValid = (orgPassword === orgConfPassword && orgPassword.length >= 6)\n                const isOrgIdValid = (nameIdUnique === true && !orgId.trim().includes(' '))\n\n                if(isPasswordValid && isOrgIdValid)\n                    this.setState({\n                        dataSubmited: false\n                    })\n                else\n                    this.setState({\n                        dataSubmited: true\n                    })\n                break\n            case 'user_register':\n                isPasswordValid = (userPassword === userConfPassword && userPassword.length >= 6)\n                const isUsernameValid = (!username.trim().includes(' '))\n                if(isPasswordValid && isUsernameValid)\n                    this.setState({\n                        dataSubmited: false\n                    })\n                else\n                    this.setState({\n                        dataSubmited: true\n                    })\n                break\n            default:\n                this.setState({registerStep: \"org\"})\n        }\n    }\n\n    formHandler = (e) => {\n        let {formData} = this.state\n\n        switch(e.target.name){\n            case 'orgId':\n            case 'orgEmail':\n            case 'username':\n            case 'userEmail':\n                if(e.target.value.includes(\" \") === false)\n                    formData[e.target.name] = e.target.value\n                break\n            case 'userPhone':\n                const isValid = validatePhoneField(e.target.value)\n                if(isValid === true)\n                    formData[e.target.name] = e.target.value\n\n                break\n            default:\n                formData[e.target.name] = e.target.value\n        }\n\n        formData.orgId = formData.orgId.trim()\n        formData.username = formData.username.trim()\n        \n        this.setState({\n            formData: formData\n        })\n        if(e.target.name === 'orgId')\n            this.checkForNameIdUniqueness(formData.orgId)\n\n        this.validateFields(formData, e.target.name)\n    }\n\n    checkForNameIdUniqueness = (nameId) => {\n        return fetch('https://us-central1-multi-manage.cloudfunctions.net/checkOrgNameIdUnique?name_id='+nameId)\n            .then(res => res.json())\n            .then(resp => {\n                console.log(resp)\n                this.setState({\n                    nameIdUnique: resp.unique\n                })\n            })\n    }\n\n    submitUserRegister = (e) => {\n        e.preventDefault();\n        const {formData} = this.state\n\n        const reqData = {\n            name_id: formData.orgId,\n            orgEmail: formData.orgEmail,\n            name: formData.orgName,\n            orgPassword: formData.orgPassword,\n\n            username: formData.username,\n            fullName: formData.userFullName,\n            email: formData.userEmail,\n            password: formData.userPassword,\n            phone: formData.userPhone,\n            jobRole: formData.jobRole\n        }\n        const isPasswordValid = (formData.orgPassword === formData.orgConfPassword && formData.orgPassword.length >= 6)\n        const isOrgIdValid = (!formData.orgId.trim().includes(' '))\n        const isUserIdValid = (!formData.username.trim().includes(' '))\n        const isUserPasswordValid = (formData.userPassword === formData.userConfPassword && formData.userPassword.length >= 6)\n\n        console.log(reqData)\n        if(isPasswordValid && isOrgIdValid && isUserIdValid && isUserPasswordValid && this.state.dataSubmited === false){\n            this.setState({isProcessing: true, dataSubmited: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/registerOrg', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(reqData)})\n                .then(res => {\n                    if(res.status === 200){\n                        window.location = \"/login\"\n                    }\n                    this.setState({isProcessing: false, dataSubmited: false})\n                })\n                .catch(e => this.setState({isProcessing: false, dataSubmited: false}))}\n    \n    }\n\n    render(){\n        if(isSessionCookieSet(USER_TOKEN) && isSessionCookieSet(ORG_TOKEN))\n                    window.location = \"/\"\n        else\n            switch(this.state.registerStep){\n                case 'org':\n                    return(\n                        <div className='auth-bg'>\n                            <div className='container'>\n                                <div className=\"auth-image\">\n                                    <img src={require('./assets/imgs/auth_manager.jpg')} alt=\"auth-manager\" />\n                                </div>\n                                <div className=\"auth-separator\"></div>\n                                <div className=\"auth-container\">\n                                    <h1>Register Organization</h1>\n                                    <form onSubmit={e => {\n                                        e.preventDefault();\n                                        this.setState({registerStep: 'user_register'}\n                                    )}}>\n                                        <input type=\"text\" className=\"txt-field\" name=\"orgId\" value={this.state.formData.orgId} placeholder=\"Organization id\" onChange={this.formHandler} required />\n                                        {(this.state.nameIdUnique === false) ? <label className=\"alert-label\">Organization name id already in use</label> : \"\"}\n                                        <input type=\"text\" className=\"txt-field\" name=\"orgName\" value={this.state.formData.orgName} placeholder=\"Organization name\" onChange={this.formHandler} required />\n                                        <input type=\"email\" className=\"txt-field\" name=\"orgEmail\" value={this.state.formData.orgEmail} placeholder=\"Organization email\" onChange={this.formHandler} required />\n                                        <input type=\"password\" className=\"txt-field\" name=\"orgPassword\" value={this.state.formData.orgPassword} placeholder=\"Password\" onChange={this.formHandler} required />\n                                        <input type=\"password\" className=\"txt-field\" name=\"orgConfPassword\" value={this.state.formData.orgConfPassword} placeholder=\"Confirm Password\" onChange={this.formHandler} required />\n                    \n                                        <input type=\"submit\" className=\"btn auth-submit\" disabled={this.state.dataSubmited} value=\"Register organization\"/>\n                                        <button className=\"button-label\" onClick={() => {window.location = \"/login\"}}>New to the app? Register your organization now!</button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                case 'user_register':\n                    return (\n                        <div className='auth-bg'>\n                            <div className='container'>\n                                <div className=\"auth-image\">\n                                    <img src={require('./assets/imgs/auth_manager.jpg')} alt=\"auth-manager\" />\n                                </div>\n                                <div className=\"auth-separator\"></div>\n                                <div class=\"auth-container\">\n                                    <ProcessingComponent radius=\"20\" display={this.state.isProcessing}/>\n                                    <h1>Create admin user</h1>\n                                    <form onSubmit={this.submitUserRegister}>\n                                        <input type=\"text\" className=\"txt-field\" name=\"userFullName\" value={this.state.formData.userFullName} placeholder=\"Full Name\" onChange={this.formHandler} required/>\n                                        <input type=\"text\" className=\"txt-field\" name=\"username\" value={this.state.formData.username} placeholder=\"Username\" onChange={this.formHandler} required/>\n                                        <input type=\"email\" className=\"txt-field\" name=\"userEmail\" value={this.state.formData.userEmail} placeholder=\"Email\" onChange={this.formHandler} required/>\n                                        <input type=\"tel\" className=\"txt-field\" name=\"userPhone\" value={this.state.formData.userPhone} placeholder=\"Phone\" onChange={this.formHandler} required/>\n                                        <input type=\"text\" className=\"txt-field\" name=\"jobRole\" value={this.state.formData.jobRole} placeholder=\"Job Role\" onChange={this.formHandler} required/>\n                                        <input type=\"password\" className=\"txt-field\" name=\"userPassword\" value={this.state.formData.userPassword} placeholder=\"Password\" onChange={this.formHandler} required/>\n                                        <input type=\"password\" className=\"txt-field\" name=\"userConfPassword\" value={this.state.formData.userConfPassword} placeholder=\"Confirm Password\" onChange={this.formHandler} required/>\n                \n                                        <input type=\"submit\" className=\"btn auth-submit\"  disabled={this.state.dataSubmited} value=\"Create user\"/>\n                                        {/* <button className=\"button-label\" onClick={this.props.authTypeHandler}>New to the app? Register your organization now!</button> */}\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    )\n                default:\n                    this.setState({registerStep: \"org\"})\n\n            }\n    }\n}\n\nexport default Register","export const updateUserData = newData => {\n    return {\n        type: \"UPDATE\",\n        newData,\n    }\n}","import React from 'react'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport ProcessingComponent from '../ProcessingComponent'\nimport { deleteState } from '../../localStorage'\nimport {validatePhoneField, validateNumberField} from '../../helpers/inputValidation.js'\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\nclass UpdateCustomTableRowModal extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            modalFieldData: null,\n            fields: null,\n            processingRequest: false,\n            dataSubmited: false\n        }\n    }\n\n    componentDidUpdate(pP, prevState){\n        if(prevState.modalFieldData === null && this.props.modalFieldData !== prevState.modalFieldData)\n            this.setState({modalFieldData: this.props.modalFieldData})\n        if((prevState.fields === null && prevState.fields !== this.props.fields ) || prevState.fields.length === 0)\n            this.setState({fields: this.props.fields})\n    }\n    \n    updateFieldValue = (e, type) => {\n        let {modalFieldData} = this.state\n        const index = parseInt(e.target.name)\n\n        console.log(e.target.value)\n\n        switch(type){\n            case 'tel':\n                const isValid = validatePhoneField(e.target.value)\n                if(isValid === true)\n                    modalFieldData[index].fieldValue  = e.target.value\n                break\n            case 'email':\n                if(e.target.value.includes(\" \") === false)\n                    modalFieldData[index].fieldValue  = e.target.value\n                break\n            case 'number':\n                // console.log(validateNumberField(e.target.value), e.target.value)\n                if(e.target.value !== '')\n                    modalFieldData[index].fieldValue  = parseInt(e.target.value)\n                break\n            default:\n                modalFieldData[index].fieldValue  = e.target.value\n        }\n\n\n        this.setState({modalFieldData: modalFieldData})\n    }\n\n\n    render(){\n        return (\n            <div>\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                <h1>Update row</h1>\n                <form onSubmit={async (e) =>  {\n                    e.preventDefault()\n                    this.setState({dataSubmited: true, processingRequest: true})\n                    if(this.state.dataSubmited === false)\n                        fetch('https://us-central1-multi-manage.cloudfunctions.net/updateTableRow', {\n                            method: 'POST',\n                            headers: { 'Content-Type': 'application/json' },\n                            body: JSON.stringify({\n                                orgId: getSessionCookie(ORG_TOKEN),\n                                tableId: getUrlParams(window.location.href).tableId,\n                                rowData: JSON.stringify(this.state.modalFieldData),\n                                tokenId: getSessionCookie(USER_TOKEN),\n                                rowIndex: parseInt(getUrlParams(window.location.href).rowIndex)\n                            }),\n                        })\n                        .then(res => {\n                            if(res.json().status === \"deauth\"){\n                                deleteSessionCookies()\n                                window.location.reload(false)\n                            }\n                            return res\n                        }).then(e => {\n                            window.location.reload(false)\n                        })\n                        .catch(err => {\n                            if(err.status === \"deauth\"){\n                                deleteSessionCookies()\n                                deleteState()\n                                window.location.reload(false)\n                            }else\n                                throw err\n                        })\n                }}>\n                    {\n                        (this.state.modalFieldData !== null && this.state.fields !== null) ?\n                            this.state.modalFieldData.map((field, i) => {\n                                let fieldData = this.state.fields.filter(f => f.name === field.fieldName)[0]\n                                \n                                if(fieldData !== undefined)\n                                    return (fieldData.type === 'select') ?\n                                        <select key={fieldData.name} className=\"txt-field\" onChange={e => this.updateFieldValue(e, fieldData.type)} name={i} defaultValue={field.fieldValue}>\n                                            {fieldData.select_data.map((selectValue, selectIndex) => \n                                                <option key={selectValue+\"-\"+selectIndex} value={selectValue} >{selectValue}</option>)}\n                                        </select>\n                            :\n                                <input key={fieldData.name} type={fieldData.type} className=\"txt-field\"\n                                    name={i} placeholder={field.fieldName} value={this.state.modalFieldData[i].fieldValue}\n                                    onChange={e => this.updateFieldValue(e, fieldData.type)} />\n                        })\n                        : \"\"\n                    }\n                    <input type=\"submit\" className=\"btn\" disabled={this.state.dataSubmited} value=\"Submit changes\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateCustomTableRowModal","import React from 'react'\n\nconst DataContainerField = (props) => (\n    <div className=\"field-display\">\n        <label className=\"field-label\">{props.label}</label>\n        <label className=\"field-value\">{props.value}</label>\n    </div>)\n\nexport default DataContainerField","import React from 'react'\nimport {Navbar} from '../Navbar'\nimport '../../css/ViewRow.scss'\nimport { MdEdit } from \"react-icons/md\";\nimport ModalBox from '../ModalBox'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\n\nimport UpdateCustomTableRowModal from '../ModalComponents/UpdateCustomTableRowModal'\nimport DataContainerField from '../DataContainerField'\n\nimport {connect} from 'react-redux'\nimport {updateUserData} from '../../actions/updateUserData.js'\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\nclass ViewCustomTableRowComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            showModal: false,\n            modalContent: null,\n            fieldData: [],\n            fields: [],\n            tableName: \"\",\n            modalFieldData: null,\n            tableData: null,\n            dataSubmited: false\n        }\n    }\n\n    componentDidMount(){\n        const params = getUrlParams(window.location.href)\n        fetch('https://us-central1-multi-manage.cloudfunctions.net/getOrgTableRowData?orgId='+getSessionCookie(ORG_TOKEN)+'&tableId='+params.tableId+'&rowIndex='+params.rowIndex+'&tokenId='+getSessionCookie(USER_TOKEN))\n            .then(res => res.json())\n            .then(res => {\n                if(res.status === \"deauth\"){\n                    deleteSessionCookies()\n                    window.location.reload(false)\n                }\n                return res\n            })\n            .then(res => {\n                console.log(res.data)\n                let fieldData = []\n\n                for(let field in res.data){\n                    if(field !== 'tableName')\n                        fieldData.push({\n                            fieldName: field,\n                            fieldValue: res.data[field]\n                        })\n                }\n\n                this.setState({\n                    tableName: res.data.tableName,\n                    fieldData: [fieldData],\n                    modalFieldData: fieldData,\n                    fields: res.fieldsData\n                })\n\n                // if(this.state.fieldData.length > 10){\n                //     let {fieldData} = this.state\n                //     let splitFieldData = []\n                //     splitFieldData[1] = fieldData.splice(10)\n                //     splitFieldData[0] = fieldData\n                //     this.setState({\n                //         fieldData: splitFieldData\n                //     })\n                //     // console.log(this.state.fieldData)\n                // }else{\n                //     const {fieldData} = this.state\n                    \n                //     this.setState({\n                //         fieldData: [fieldData]\n                //     })\n                // }\n            })\n            .catch(err => {\n                if(err.status === \"deauth\")\n                    deleteSessionCookies()\n                else\n                    throw err\n            })\n\n    }\n\n    toggleModal = () => {\n        const { showModal } = this.state\n        this.setState({\n            showModal: !showModal\n        })\n    }\n\n    updateFieldValue = (e) => {\n        let {fieldData} = this.state\n        const i = parseInt(e.target.name)\n\n        if(i >= 10)\n            fieldData[1][i-10].fieldValue = e.target.value\n        else\n            fieldData[0][i].fieldValue = e.target.value\n\n        this.setState({\n            fieldData:  fieldData\n        })\n\n        this.updateModalContent()\n    }\n\n    render(){\n        return (\n            <div>\n                {\n                    (this.state.modalFieldData !== null && this.state.modalFieldData !== undefined) ?\n                        <ModalBox dataFields={<UpdateCustomTableRowModal modalFieldData={this.state.modalFieldData} fields={this.state.fields} />} isShown={this.state.showModal} toggleModal={this.toggleModal}/>\n                    : \"\"\n                }\n\n                <div id=\"content-viewrow\" style={{display: \"flex\"}}>\n\n                    <div id=\"field-data-containers\">\n                        <div id=\"header\">\n                            <h1>{this.state.tableName}</h1>\n                            <button className=\"btn\" onClick={this.toggleModal}><MdEdit /></button>\n                        </div>\n                        <div style={{display: \"flex\"}}>\n                            {this.state.fieldData.map((section, sectionIndex) => \n                                <div className=\"field-display-container\" key={sectionIndex}>\n                                    {/* <ul> */}\n                                        {Array.from(section).map(field => \n                                            // <li key={field.fieldName}>\n                                                <div className=\"field-display\">\n                                                    <label className=\"field-label\">{field.fieldName}</label>\n                                                    <label className=\"field-value\">{field.fieldValue}</label>\n                                                </div>\n                                            // </li>\n                                        )}\n                                    {/* </ul> */}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: (newData) => dispatch(updateUserData(newData))\n  }\n}\n\nexport const ViewCustomTableRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewCustomTableRowComponent)\n","import React from 'react';\nimport {IoIosRemoveCircleOutline} from 'react-icons/io'\nimport Checkbox from 'react-checkbox-component'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport { deleteState } from '../../localStorage';\nimport ProcessingComponent from '../ProcessingComponent';\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\nclass UpdateFieldModalData extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            // tableFields: null,\n            selectFieldValue: \"\",\n            dataSubmited: false,\n            tableFields: null,\n            processingRequest: false\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.tableFields === null & prevState.tableFields !== this.props.tableFields)\n            this.setState({tableFields: this.props.tableFields})\n    }\n    \n    addSelectValue = () => {\n        console.log(\"add\")\n        let {tableFields, selectFieldValue} = this.state\n        if(selectFieldValue !== ''){\n            if(tableFields[this.props.sectionIndex][this.props.index].type === 'select'){\n                tableFields[this.props.sectionIndex][this.props.index].select_data.push(selectFieldValue)\n                this.setState({\n                    tableFields: tableFields,\n                    selectFieldValue: \"\"\n                })\n            }\n        }\n    }\n\n    removeSelectDataValue = (removeIndex) => {\n        let {tableFields} = this.state\n        tableFields[this.props.sectionIndex][this.props.index].select_data.splice(removeIndex, 1)\n\n        this.setState({\n            tableFields: tableFields\n        })\n    }\n\n    handleCheckbox = () => {\n        let {tableFields} = this.state\n        tableFields[this.props.sectionIndex][this.props.index].display_table = !tableFields[this.props.sectionIndex][this.props.index].display_table\n\n        this.setState({\n            tableFields: tableFields\n        })\n    }\n \n    submitUpdate = () => {\n        let tableFields = (this.state.tableFields.length === 2) ? [...this.state.tableFields[0], ...this.state.tableFields[1]] : this.state.tableFields[0]\n\n        if(this.state.dataSubmited === false){\n            this.setState({dataSubmited: true, processingRequest: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/updateTableFields', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        orgId: getSessionCookie(ORG_TOKEN),\n                        tableId: getUrlParams(window.location.href).tableId,\n                        tokenId: getSessionCookie(USER_TOKEN),\n                        fieldsData: JSON.stringify(tableFields)\n                    }),\n                })\n                .then(res => {\n                    if(res.json().status === \"deauth\"){\n                        deleteSessionCookies()\n                        window.location.reload(false)\n                        deleteState()\n                    }\n                    this.props.toggleModal()\n                })\n                .catch(err => {\n                    throw err\n                })\n        }\n    }\n\n    handleRadioButtonsChange = (e, sectionIndex, index) => {\n        let {tableFields} = this.state\n        tableFields[sectionIndex][index].type = e.target.value\n        if(tableFields[sectionIndex][index].type === 'select')\n            tableFields[sectionIndex][index].select_data = []\n\n        this.setState({\n            tableFields: tableFields\n        })\n    }\n\n    handleSelectFieldValueInputChange = (e) => this.setState({selectFieldValue: e.target.value})\n    \n    handleSelectValueKeyDown = (e) => {\n        if(e.key === 'Enter' && this.state.selectFieldValue !== '')\n            this.addSelectValue(e)\n    }\n    \n    render(){\n        return (\n            <div>\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                <h1>Update field</h1>\n                <form onSubmit={async (e) =>  {\n                    e.preventDefault()\n                }}>\n                    {(this.state.tableFields !== null) ? \n                        <div>\n                            <h3>Field type</h3>\n                            <div id=\"field-type-radio-group\">\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'text')} value=\"text\" id=\"text\" name=\"field-type\"/>\n                                <label htmlFor=\"text\">Text</label>\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'date')} value=\"date\" id=\"date\" name=\"field-type\"/>\n                                <label htmlFor=\"date\">Date</label>\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'time')} value=\"time\" id=\"time\" name=\"field-type\"/>\n                                <label htmlFor=\"time\">Time</label>\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'number')} value=\"number\" id=\"number\" name=\"field-type\"/>\n                                <label htmlFor=\"number\">Number</label>\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'select')} value=\"select\" id=\"select\" name=\"field-type\"/>\n                                <label htmlFor=\"select\">Select</label>\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'checkbox')} value=\"checkbox\" id=\"checkbox\" name=\"field-type\"/>\n                                <label htmlFor=\"checkbox\">Checkbox</label>\n                                <input type=\"radio\" onChange={(e) => (this.handleRadioButtonsChange(e, this.props.sectionIndex, this.props.index))}\n                                    checked={(this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'tel')} value=\"tel\" id=\"tel\" name=\"field-type\"/>\n                                <label htmlFor=\"tel\">Phone</label>\n                            </div>\n    \n                            {\n                                (this.state.tableFields[this.props.sectionIndex][this.props.index].type === 'select') ? \n                                    <div>\n                                        <h3>Select Field Values</h3>\n                                            <div id=\"select-values\">\n                                                <div id=\"select-values-container\">\n                                                    {this.state.tableFields[this.props.sectionIndex][this.props.index].select_data.map((value, i) => \n                                                        <div className=\"chip\">{value}\n                                                            <button className=\"remove-btn\" onClick={() => {\n                                                                this.removeSelectDataValue(i)\n                                                            }}><IoIosRemoveCircleOutline /></button></div>\n                                                    )}\n                                                </div>\n                                                <div id=\"select-values-inputs\">\n                                                    <input type=\"text\" className=\"txt-field\" placeholder=\"Select value\" value={this.state.selectFieldValue}\n                                                        /* onKeyDown={this.handleSelectValueKeyDown} */ onChange={this.handleSelectFieldValueInputChange}/>\n                                                    <button className=\"btn\" onClick={this.addSelectValue}>Add value</button>\n                                                </div>\n                                            </div>\n                                    </div>\n                                : \"\"\n                            }\n    \n                            <div className=\"table-display\">\n                                <Checkbox size=\"small\" onChange={this.handleCheckbox} color=\"#11152f\" isChecked={this.state.tableFields[this.props.sectionIndex][this.props.index].display_table}/>\n                                <label>Display in dashboard table</label>\n                            </div>\n                        </div>\n                    : \"\"}\n    \n                        \n                    <input type=\"submit\" className=\"btn\" disabled={this.state.dataSubmited} onClick={this.submitUpdate} value=\"Submit changes\"/>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default UpdateFieldModalData\n\n// 0100 0111\n\n","import React from 'react'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport ProcessingComponent from '../ProcessingComponent';\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\nclass DeleteTableModalData extends React.Component{\n    constructor(props){\n        super(props)\n\n        this.state = {\n            step: \"conf_delete\", // ask_for_admin_pass\n            adminPassword: \"\",\n            displayError: false,\n            processingRequest: false,\n            dataSubmited: false\n        }\n    }\n\n    handleAdminPasswordChange = (e) => this.setState({adminPassword: e.target.value})\n    goToAdminPassStep = () => this.setState({step: 'ask_for_admin_pass'})\n\n    handleTableDeleteRequest = () => {\n        if(this.state.dataSubmited === false){\n            this.setState({dataSubmited: true, processingRequest: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/deleteTable', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        orgId: getSessionCookie(ORG_TOKEN),\n                        tableId: getUrlParams(window.location.href).tableId,\n                        tokenId: getSessionCookie(USER_TOKEN),\n                        adminPass: this.state.adminPassword\n                    }),\n                })\n                .then(res => {\n                    switch(res.status){\n                        case 401:\n                            this.setState({displayError: true, dataSubmited: false, processingRequest: false})\n                            break\n                        case 200:\n                            console.log(res)\n                            if(res.json().status === \"deauth\"){\n                                deleteSessionCookies()\n                                window.location.reload(false)\n                            }else\n                                window.location = \"/?table=manage_tables\"\n                            break\n                        default:\n                            window.location = \"/\"\n                    }\n                })\n                .catch(err => {\n                    throw err\n                })\n        }\n    }\n\n    render(){\n        return (\n            <div id=\"deleteModalAlert\">\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                <h1>Warning</h1>\n                {\n                    (this.state.step === 'conf_delete') ? \n                        <div>\n                            <h3>Are you sure you wanna delete this table? ({this.props.tableName})</h3>\n                            <label><b>ALL THE DATA</b> in this table will be <b>DELETED</b>!</label>\n                            <div>\n                                <button className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\n                                <button className=\"btn\" onClick={this.goToAdminPassStep}>Delete</button>\n                            </div>\n                        </div>\n                    : (this.state.step === 'ask_for_admin_pass') ?\n                        <div>\n                            <h3>Insert your password to confirm this action</h3>\n                            <label>You're about to delete the table <b>{this.props.tableName}</b></label><br/>\n                            <input type=\"password\" placeholder=\"Admin password\" className=\"txt-field\" value={this.state.adminPassword}\n                                onChange={this.handleAdminPasswordChange} />\n                            {(this.state.displayError === true) ?\n                                <label className=\"error-message\">Wrong password!</label>\n                            : \"\"}\n                            <div>\n                                <button className=\"btn\" onClick={this.handleTableDeleteRequest} disabled={this.state.adminPassword === ''}>Confirm Deletion</button>\n                            </div>\n                        </div>\n                    : \"\"\n                }\n            </div>\n        )\n    }\n}\n\nexport default DeleteTableModalData","import React from 'react'\nimport {IoIosAdd} from 'react-icons/io'\nimport { MdEdit, MdDelete } from \"react-icons/md\";\nimport '../../css/ViewRow.scss'\nimport ModalBox from '../ModalBox'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\n\nimport {connect} from 'react-redux'\nimport {updateUserData} from '../../actions/updateUserData.js'\n\nimport UpdateFieldModalData from '../ModalComponents/UpdateFieldModalData'\nimport AddFieldModalData from '../ModalComponents/AddFieldModalData'\nimport DeleteTableModalData from '../ModalComponents/DeleteTableModalData'\nimport ProcessingComponent from '../ProcessingComponent';\nimport DataContainerField from '../DataContainerField';\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\n\nclass ViewTablesManageRowComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            showModal: false,\n            dataSubmited: false,\n            sectionIndex: 0,\n            index: 0,\n            selectFieldValue: \"\",\n            modalFieldData: {},\n            tableFields: null,\n            tableName: \"\",\n            modalTypeToShow: 'update',\n            fieldToDeleteIndex: null,\n            processingRequest: false\n        }\n    }\n\n    requestRowData = () => {\n        const params = getUrlParams(window.location.href)\n        fetch('https://us-central1-multi-manage.cloudfunctions.net/getOrgTableData?orgId='+getSessionCookie(ORG_TOKEN)+'&tableId='+params.tableId+'&tokenId='+getSessionCookie(USER_TOKEN))\n            .then(res => res.json())\n            .then(res => {\n                if(res.status === \"deauth\"){\n                    deleteSessionCookies()\n                    window.location.reload(false)\n                }\n                return res\n            })\n            .then(res => {\n                let tableFields = res.tableData.fields\n\n                console.log(tableFields, res)\n                \n\n                this.setState({\n                    tableFields: [tableFields],\n                    tableName: res.tableData.name\n                })\n\n            })\n    }\n\n    componentDidMount(){\n        this.requestRowData()\n    }\n    \n    toggleModal = (type) => {\n        const { showModal } = this.state\n        let newState = {\n            showModal: !showModal\n        }\n        if(newState.showModal === false)\n            this.requestRowData()\n        else\n            newState.modalTypeToShow = type\n        this.setState(newState)\n    }\n    \n    handleEditField = (sectionIndex, i) => {\n        this.setState({\n            sectionIndex: sectionIndex,\n            index: i\n        })\n    }\n\n    handleFieldDeleteRequest = (index) => {\n        if(this.state.dataSubmited === false){\n            this.setState({dataSubmited: true, processingRequest: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/deleteTableField', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        orgId: getSessionCookie(ORG_TOKEN),\n                        tableId: getUrlParams(window.location.href).tableId,\n                        tokenId: getSessionCookie(USER_TOKEN),\n                        fieldIndex: this.state.fieldToDeleteIndex\n                    }),\n                })\n                .then(res => {\n                    if(res.json().status === \"deauth\"){\n                        deleteSessionCookies()\n                        window.location.reload(false)\n                    }\n                    return res\n                })\n                .then(res => {\n                    this.toggleModal()\n                })\n                .catch(err => {\n                    throw err\n                })\n        }\n    }\n\n    render(){\n        return (\n            (this.state.tableFields !== undefined) ? \n            <div>\n                <ModalBox dataFields={\n                    (this.state.modalTypeToShow === 'update') ?\n                        <UpdateFieldModalData tableFields={this.state.tableFields} toggleModal={this.toggleModal}\n                            sectionIndex={this.state.sectionIndex} index={this.state.index} />\n                    : (this.state.modalTypeToShow === 'add') ? \n                        <AddFieldModalData />\n                    : (this.state.modalTypeToShow === 'conf_delete_field') ? \n                        <div id=\"deleteModalAlert\">\n                            <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                            <h1>Warning</h1>\n                            <h3>Are you sure you wanna delete this field?</h3>\n                            <label><b>ALL THE DATA</b> associated with this field will be <b>DELETED</b>!</label>\n                            <div>\n                                <button className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\n                                <button className=\"btn\" onClick={this.handleFieldDeleteRequest}>Delete</button>\n                            </div>\n                        </div>\n                    : (this.state.modalTypeToShow === 'conf_delete_table') ? \n                        <DeleteTableModalData tableName={this.state.tableName} toggleModal={this.toggleModal}/>\n                    : \"\"\n                } isShown={this.state.showModal} toggleModal={this.toggleModal}/>\n\n                <div id=\"content-viewrow\" style={{display: \"flex\"}}>\n\n                    <div id=\"field-data-containers\">\n                        <div id=\"header\">\n                            <h1>{this.state.tableName}</h1>\n                            <button className=\"btn\" onClick={() => {this.toggleModal('add')}} style={{fontSize: \"20px\"}}><IoIosAdd /></button>\n                            <button className=\"remove-btn\" onClick={() => {\n                                this.toggleModal('conf_delete_table')}}><MdDelete /></button>\n                        </div>\n                        <div style={{display: \"flex\"}}>\n                            \n                            {(this.state.tableFields !== null) ?\n                                this.state.tableFields.map((section, sectionIndex) => \n                                    <ul key={sectionIndex} className=\"table-data-ul\">\n                                        {Array.from(section).map((field, i) => \n                                            <li key={field.name} className=\"table-data-field-display-container\">\n                                                <div className=\"content-header\">\n                                                    <h2>{field.name}</h2>\n                                                    <DataContainerField label=\"Type\" value={(field.type === 'tel') ? \"phone\" : field.type} />\n                                                    <DataContainerField label=\"Display in table\" value={(field.display_table) ? \"Yes\" : \"No\"} />\n                                                    <div className=\"field-actions\">\n                                                        <button className=\"secondary-btn\" onClick={() => {\n                                                            this.setState({sectionIndex: sectionIndex, index: i})\n                                                            this.toggleModal('update')}}><MdEdit /></button>\n                                                        <button className=\"remove-btn\" onClick={() => {\n                                                            this.setState({fieldToDeleteIndex: i})\n                                                            this.toggleModal('conf_delete_field')}}><MdDelete /></button>\n                                                    </div>\n                                                </div>\n                                                {(field.type === 'select') ?\n                                                    <div className=\"content\">\n                                                        <div>\n                                                            <label><b>Select field values</b></label>\n                                                            <ul>\n                                                                {field.select_data.map(value => <li>{value}</li>)}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                : \"\"}\n                                            </li>\n                                        )}\n                                    </ul>\n                                )\n                            : \"\"\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            : \"\"\n        )\n    }\n}\n\n// export default ViewRow\n\nconst mapStateToProps = state => {\n  return {\n    userData: state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: (newData) => dispatch(updateUserData(newData))\n  }\n}\n\nexport const ViewTablesManageRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewTablesManageRowComponent)\n","import React from 'react'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\nimport { deleteState } from '../../localStorage'\nimport ProcessingComponent from '../ProcessingComponent'\nimport {validatePhoneField} from '../../helpers/inputValidation.js'\n\nclass UpdateUserDataModal extends React.Component{\n    constructor(props){\n        super(props)\n        \n        this.state = {\n            userData: null,\n            dataSubmited: false,\n            processingRequest: false\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.userData == null && prevState.userData !== this.props.userData)\n            this.setState({\n                userData: this.props.userData,\n            })\n    }\n    submitUpdate = (e) => {\n        e.preventDefault()\n\n        if(this.state.dataSubmited === false){\n            this.setState({dataSubmited: true, processingRequest: true})\n            fetch('https://us-central1-multi-manage.cloudfunctions.net/updateOrgUser', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\n                        orgId: getSessionCookie(ORG_TOKEN),\n                        tokenId: getSessionCookie(USER_TOKEN),\n                        userData: JSON.stringify(this.state.userData)\n                    }),\n                })\n                .then(res => {\n                    switch(res.status){\n                        case 200:\n                            return res.json()\n                        case 401:\n                            window.location = \"/\"\n                            break\n                        default:\n                            window.reload(false)\n                    }\n                })\n                .then(res => {\n                    if(res.status === \"deauth\"){\n                        deleteSessionCookies()\n                        deleteState()\n                        window.location.reload(false)\n                    }else if(res === 'success'){\n                        this.props.toggleModal()\n                    }\n                })\n                .catch(err => {\n                    window.location.reload(false)\n                })\n        }\n    }\n\n    handleFieldUpdate = (e) => {\n        let {userData} = this.state\n        // userData[e.target.name] = e.target.value\n        switch(e.target.name){\n            case 'email':\n            case 'username':\n                if(e.target.value.includes(\" \") === false)\n                    userData[e.target.name] = e.target.value\n                break\n            case 'phone':\n                const isValid = validatePhoneField(e.target.value)\n                if(isValid === true)\n                    userData[e.target.name] = e.target.value\n                break\n            case 'admin':\n                userData.admin = (userData.admin === 'true') ? true\n                    : (userData.admin === 'false') ? false : false\n                break\n            default:\n                userData[e.target.name] = e.target.value\n        }\n    \n        \n        this.setState({userData: userData})\n    }\n\n    render(){\n        return (\n            <div>\n                <ProcessingComponent radius=\"0\" display={this.state.processingRequest} />\n                <h1>Update user data</h1>\n                <form onSubmit={this.submitUpdate}>\n                    {\n                        (this.state.userData !== null && this.state.userData !== undefined) ?\n                            <div>\n                                <input type=\"text\" className=\"txt-field\" onChange={this.handleFieldUpdate} name=\"name\" placeholder=\"Name\" value={this.state.userData.name}/>\n                                <input type=\"text\" className=\"txt-field\" onChange={this.handleFieldUpdate} name=\"username\" placeholder=\"Username\" value={this.state.userData.username}/>\n                                <input type=\"text\" className=\"txt-field\" onChange={this.handleFieldUpdate} name=\"jobRole\" placeholder=\"Job Role\" value={this.state.userData.jobRole}/>\n                                <input type=\"tel\" className=\"txt-field\" onChange={this.handleFieldUpdate} name=\"phone\" placeholder=\"Phone\" value={this.state.userData.phone}/>\n                                <select className=\"txt-field\" onChange={this.handleFieldUpdate} name=\"admin\" defaultValue={this.state.userData.admin}>\n                                    <option value={true}>Yes</option>\n                                    <option value={false}>No</option>\n                                </select>\n                            </div>\n                        : \"\"\n                    }\n\n                    <input type=\"submit\" className=\"btn\" value=\"Apply changes\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateUserDataModal","import React from 'react'\nimport {Navbar} from '../Navbar'\nimport { MdEdit } from \"react-icons/md\";\nimport '../../css/ViewRow.scss'\nimport ModalBox from '../ModalBox'\nimport { getSessionCookie, ORG_TOKEN, USER_TOKEN, deleteSessionCookies } from '../../helpers/session/auth'\n\nimport {connect} from 'react-redux'\nimport {updateUserData} from '../../actions/updateUserData.js'\nimport UpdateUserDataModal from '../ModalComponents/UpdateUserDataModal'\nimport DataContainerField from '../DataContainerField';\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\n\nclass ViewUsersManageRowComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            userData: null,\n            showModal: false\n        }\n    }\n\n    requestRowData = () => {\n        const params = getUrlParams(window.location.href)\n        fetch('https://us-central1-multi-manage.cloudfunctions.net/getOrgUserData?orgId='+getSessionCookie(ORG_TOKEN)+'&tokenId='+getSessionCookie(USER_TOKEN)+\"&userId=\"+params.userId)\n            .then(res => {\n                switch(res.status){\n                    case 200:\n                        return res.json()\n                    case 401:\n                        window.location = \"/\"\n                        break\n                    default:\n                        window.location = \"/\"\n                }\n            })\n            .then(res => {\n                if(res.status === \"deauth\"){\n                    deleteSessionCookies()\n                    window.location.reload(false)\n                }else{\n                    this.setState({\n                        userData: res.userData\n                    })\n                }\n                return res\n            })\n            .catch(err => {\n                throw err\n            })\n    }\n\n    componentDidMount(){\n        this.requestRowData()\n    }\n    \n    toggleModal = () => {\n        const { showModal } = this.state\n        let newState = {\n            showModal: !showModal\n        }\n        this.setState(newState)\n    }\n\n    render(){\n        return (\n            <div>\n                <ModalBox dataFields={\n                    <UpdateUserDataModal userData={this.state.userData} toggleModal={this.toggleModal}/>\n                } isShown={this.state.showModal} toggleModal={this.toggleModal}/>\n\n                <div id=\"content-viewrow\" style={{display: \"flex\"}}>\n\n                    <div id=\"field-data-containers\">\n                        <div id=\"header\">\n                            <h1>User</h1>\n                            <button className=\"btn\" onClick={this.toggleModal}><MdEdit /></button>\n                            {/* <button className=\"btn\" onClick={() => {this.toggleModal('add')}} style={{fontSize: \"20px\"}}><IoIosAdd /></button>\n                            <button className=\"remove-btn\" onClick={() => {\n                                this.toggleModal('conf_delete_table')}}><MdDelete /></button> */}\n                        </div>\n\n                        <div className=\"content\">\n                            {(this.state.userData !== null && this.state.userData !== undefined) ?\n                                <div className=\"field-display-container\">\n                                    <DataContainerField label=\"Username\" value={this.state.userData.username} />\n                                    <DataContainerField label=\"Phone\" value={this.state.userData.phone} />\n                                    <DataContainerField label=\"Email\" value={this.state.userData.email} />\n                                    <DataContainerField label=\"Job role\" value={this.state.userData.jobRole} />\n                                    <DataContainerField label=\"Admin\" value={(this.state.userData.admin === true) ? \"Yes\" : \"No\"} />\n                                </div>\n                            : \"\"}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: (newData) => dispatch(updateUserData(newData))\n  }\n}\n\nexport const ViewUsersManageRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewUsersManageRowComponent)\n","import React from 'react'\nimport './css/ViewRow.scss'\n\nimport {connect} from 'react-redux'\nimport {updateUserData} from './actions/updateUserData.js'\nimport { ViewCustomTableRow } from './components/ViewRowComponents/ViewCustomTableRow';\nimport { ViewTablesManageRow } from './components/ViewRowComponents/ViewTablesManageRow';\nimport { ViewUsersManageRow } from './components/ViewRowComponents/ViewUsersManageRow';\nimport {Navbar} from './components/Navbar'\n\nfunction getUrlParams(url) {\n\tvar params = {};\n\tvar parser = document.createElement('a')\n\tparser.href = url\n\tvar query = parser.search.substring(1)\n\tvar vars = query.split('&')\n\tfor (var i = 0; i < vars.length; i++) {\n\t\tvar pair = vars[i].split('=')\n\t\tparams[pair[0]] = decodeURIComponent(pair[1])\n\t}\n\treturn params\n}\n\nclass ViewRowComponent extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            showModal: false,\n            modalContent: null,\n            fieldData: [],\n            fields: [],\n            tableName: \"\",\n            modalFieldData: null,\n            tableData: null,\n            dataSubmited: false,\n            params: getUrlParams(window.location.href)\n        }\n    }\n\n    render(){\n        return (\n          <div className=\"App\">\n            <Navbar />\n            <div id=\"dashboard-content\">\n                {(this.state.params.type === 'manage_tables') ?\n                  <ViewTablesManageRow />\n                : (this.state.params.type === 'manage_users') ? \n                  <ViewUsersManageRow />\n                : <ViewCustomTableRow />}\n            </div>\n          </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: (newData) => dispatch(updateUserData(newData))\n  }\n}\n\nexport const ViewRow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ViewRowComponent)\n","import {combineReducers} from 'redux'\nimport {tablesData} from './tablesData'\nimport {userData} from './userData'\n\nexport default combineReducers({\n    tablesData,\n    userData\n})","export const tablesData = (state = [], action) => {\n    switch(action.type){\n        case 'UPDATE_TABLES':\n            return action.newData\n        default:\n            return state\n    }\n}","export const userData = (state = [], action) => {\n    switch(action.type){\n        case 'UPDATE':\n            return action.newData\n        default:\n            return state\n    }\n}","import React from 'react'\nimport './css/LandingPage.scss'\n\nclass LandingPage extends React.Component{\n    constructor(props){\n        super(props)\n\n\n    }\n\n    render(){\n        return <div className=\"landing-page\">\n            <div className=\"auth-btns\">\n                <button className=\"register\" onClick={() => window.location = \"/register\"}>Sign up</button>\n                <button className=\"login\" onClick={() => window.location = \"/login\"}>Sign in</button>\n            </div>\n            <div className=\"landing-header\">\n                <h1>Multi<br/>Manage</h1>\n                <h4>Customizable Management<br/>Web Platform</h4>\n            </div>\n        </div>\n    }\n}\n\nexport default LandingPage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport { AppComponent } from './App.jsx';\nimport Login from './Login'\nimport Register from './Register'\nimport {ViewRow} from './ViewRow'\nimport { isSessionCookieSet, USER_TOKEN, ORG_TOKEN } from './helpers/session/auth.js'\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom'\n\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport rootReducer from './reducers/index'\nimport {loadState, saveState} from './localStorage.js'\n\nimport LandingPage from './LandingPage'\n\nconst store = createStore(rootReducer, loadState())\n\nstore.subscribe(() => {\n    saveState(store.getState())\n})\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n        isSessionCookieSet(USER_TOKEN) && isSessionCookieSet(ORG_TOKEN)\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )} />\n)\n\nfunction routing() {\n    return (\n        <Router>\n            <div>\n                <PrivateRoute exact path=\"/\" component={() => <Provider store={store}> <AppComponent/> </Provider>}/>\n                <Route path=\"/home\" component={LandingPage}/>\n                <Route path=\"/login\" component={Login}/>\n                <Route path=\"/register\" component={Register}/>\n                <PrivateRoute path=\"/viewrow\" component={() => <Provider store={store}> <ViewRow/> </Provider>}/>\n            </div>\n        </Router>\n    )\n}\n\nReactDOM.render(routing(), document.getElementById('root'));\n"],"sourceRoot":""}